# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QZ_UAznhhc7cOW9AKFBpdimagyMMzKC5
"""

import csv
from mpmath import mp 
import numpy as np
mp.prec = 336 # binary precision 
mp.dps = 250 # decimal precision 

def Cauchy_p_calculation(input_name, output_name):
    my_data = np.genfromtxt(input_name, delimiter=',')
    p_values = my_data[1:]
    output = []
    T_list = []
    for i in range(len(p_values)):
        pval = p_values[i]
        pval = pval[np.logical_not(np.isnan(pval))]
        num_pvalue = len(pval)
        T1 = [(mp.fdiv(mp.mpf(1),mp.mpf(num_pvalue)))*mp.tan((mp.fsub(mp.mpf('0.5'), mp.mpf(p)))*mp.pi) for p in pval]
        T = sum(T1)
        p_cauchy = mp.fsub(mp.mpf('0.5'),(mp.atan(T)/mp.pi))
        p_cauchy
        output.append(p_cauchy)
        T_list.append(T)
        rounded = [float(mp.nstr(p, 5)) for p in output]
        

        with open(output_name, "w+", newline = '') as file: 
            writer = csv.writer(file)
            for (element1, element2) in zip(T_list, rounded):
                writer.writerow([element1, element2])

# read from directory and compute Cauchy p-values 
import os
file_dir = "file_dir"
output_dir = "output_dir"
if not os.path.exists(output_dir):
    os.mkdir(output_dir)
file_names = os.listdir(file_dir)

for file in file_names:
    Cauchy_p_calculation(input_name = file_dir+file, 
                        output_name = output_dir+file)